
%input#proposal_attributes{:type => "hidden", :name => "proposal_attributes", :value => @proposal.raw_data['attributes'][@proposal.barclamp].to_json}
%p
  %label{:for => "proposal_attributes"}= t('.attributes')
  = link_to "Raw", proposal_barclamp_path(:id => @proposal.name, :controller => @proposal.barclamp, :dep_raw => @dep_raw, :attr_raw => true), :style => "float: right;"
  %div.container

    %p
    %br
    %strong= t('.barclamp_settings')

    %p
      %label{ :for => :debug }= t('.debug')
      = select_tag :debug, options_for_select([['false', false],['true', true]], @proposal.raw_data['attributes'][@proposal.barclamp]["debug"]), :onchange => "update_value('debug', 'debug', 'boolean')"

    %p
    %br
    %strong= t('.os_settings')

    %p
      %label{ :for => :fs_type }= t('.fs_type')
      = select_tag :fs_type, options_for_select([['ext3','ext3'],['ext4', 'ext4'],['xfs', 'xfs']], @proposal.raw_data['attributes'][@proposal.barclamp][:os]["fs_type"]), :onchange => "update_value('os/fs_type', 'fs_type', 'string')"

    %p
      %label{ :for => :mapred_openfiles }= t('.mapred_openfiles')
      %input#mapred_openfiles{:type => "text", :name => "mapred_openfiles", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp][:os]["mapred_openfiles"], :onchange => "update_value('os', 'mapred_openfiles', 'string')"}

    %p
      %label{ :for => :hdfs_openfiles }= t('.hdfs_openfiles')
      %input#hdfs_openfiles{:type => "text", :name => "hdfs_openfiles", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp][:os]["hdfs_openfiles"], :onchange => "update_value('os', 'hdfs_openfiles', 'string')"}

    %p
      %label{ :for => :hbase_openfiles }= t('.hbase_openfiles')
      %input#hbase_openfiles{:type => "text", :name => "hbase_openfiles", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp][:os]["hbase_openfiles"], :onchange => "update_value('os', 'hbase_openfiles', 'string')"}

    %p
    %br
    %strong= t('.cmapi_settings')

    %p
      %label{ :for => :deployment_type }= t('.deployment_type')
      = select_tag :deployment_type, options_for_select([['manual', 'manual'],['auto', 'auto']], @proposal.raw_data['attributes'][@proposal.barclamp][:cmapi]["deployment_type"]), :onchange => "update_value('cmapi/deployment_type', 'deployment_type', 'string')"

    %p
      %label{ :for => :server_host }= t('.server_host')
      %input#server_host{:type => "text", :name => "server_host", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp][:cmapi]["server_host"], :onchange => "update_value('cmapi', 'server_host', 'string')"}

    %p
      %label{ :for => :server_port }= t('.server_port')
      %input#server_port{:type => "text", :name => "server_port", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp][:cmapi]["server_port"], :onchange => "update_value('cmapi', 'server_port', 'string')"}

    %p
      %label{ :for => :username }= t('.username')
      %input#username{:type => "text", :name => "username", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp][:cmapi]["username"], :onchange => "update_value('cmapi', 'username', 'string')"}

    %p
      %label{ :for => :password }= t('.password')
      %input#password{:type => "text", :name => "password", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp][:cmapi]["password"], :onchange => "update_value('cmapi', 'password', 'string')"}

    %p
      %label{ :for => :use_tls }= t('.use_tls')
      = select_tag :use_tls, options_for_select([['false', false],['true', true]], @proposal.raw_data['attributes'][@proposal.barclamp][:cmapi]["use_tls"]), :onchange => "update_value('cmapi', 'use_tls', 'boolean')"

    %p
      %label{ :for => :version }= t('.version')
      %input#version{:type => "text", :name => "version", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp][:cmapi]["version"], :onchange => "update_value('cmapi', 'version', 'string')"}

    %p
    %br
    %strong= t('.cluster_settings')

    %p
      %label{ :for => :cluster_name }= t('.cluster_name')
      %input#cluster_name{:type => "text", :name => "cluster_name", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp][:cluster]["cluster_name"], :onchange => "update_value('cluster', 'cluster_name', 'string')"}

    %p
      %label{ :for => :cdh_version }= t('.cdh_version')
      %input#cdh_version{:type => "text", :name => "cdh_version", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp][:cluster]["cdh_version"], :onchange => "update_value('cluster', 'cdh_version', 'string')"}

    %p
      %label{ :for => :license_key }= t('.license_key')
      %input#license_key{:type => "text", :name => "license_key", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp][:cluster]["license_key"], :onchange => "update_value('cluster', 'license_key', 'string')"}

    %p
      %label{ :for => :rack_id }= t('.rack_id')
      %input#rack_id{:type => "text", :name => "rack_id", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp][:cluster]["rack_id"], :onchange => "update_value('cluster', 'rack_id', 'string')"}

    %p
    %br
    %strong= t('.ha_settings')

    %p
      %label{ :for => :shared_edits_directory }= t('.shared_edits_directory')
      %input#shared_edits_directory{:type => "text", :name => "shared_edits_directory", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp][:ha]["shared_edits_directory"], :onchange => "update_value('ha', 'shared_edits_directory', 'string')"}

    %p
      %label{ :for => :shared_edits_export_options }= t('.shared_edits_export_options')
      %input#shared_edits_export_options{:type => "text", :name => "shared_edits_export_options", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp][:ha]["shared_edits_export_options"], :onchange => "update_value('ha', 'shared_edits_export_options', 'string')"}

    %p
      %label{ :for => :shared_edits_mount_options }= t('.shared_edits_mount_options')
      %input#shared_edits_mount_options{:type => "text", :name => "shared_edits_mount_options", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp][:ha]["shared_edits_mount_options"], :onchange => "update_value('ha', 'shared_edits_mount_options', 'string')"}

